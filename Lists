Python Lists

Lists are used to store multiple items in a single variable

thislist = ["apple", "banana", "cherry"]
print(thislist)


List Length

thislist = ["apple", "banana", "cherry"]
print(len(thislist))

——————

Access list item

Using index

print(thislist[1])

print(thislist[-1])

Range of Indexes

print(thislist[2:5])

print(thislist[:4])

print(thislist[2:])

Check if Item Exists in list

Using in

thislist = ["apple", "banana", "cherry"]
if "apple" in thislist:
  print("Yes, 'apple' is in the fruits list")

———————————————————
Change Item Value

thislist = ["apple", "banana", "cherry"]
thislist[1] = "blackcurrant"
print(thislist)

range

thislist[1:3] = ["blackcurrant", "watermelon"]


Insert Items

thislist.insert(2, "watermelon")

————————————————

Append Items


To add an item to the end of the list
thislist.append("orange")

———————————
Extend List
   Extend List with another list

thislist = ["apple", "banana", "cherry"]
tropical = ["mango", "pineapple", "papaya"]
thislist.extend(tropical)


Remove item from list

The remove() method removes the specified item.


thislist = ["apple", "banana", "cherry"]
thislist.remove("banana")
print(thislist)

—————

Remove Specified Index

thislist.pop(1)

If you do not specify the index, the pop() method removes the last item.

———————

The del keyword also removes the specified index:

del thislist[0]

The del keyword can also delete the list completely

del thislist


———————

Clear the List

The clear() method empties the list.
The list still remains, but it has no content.


thislist = ["apple", "banana", "cherry"]
thislist.clear()
print(thislist)

———————————————————

Loops through lists

You can loop through the list items by using a for loop:

thislist = ["apple", "banana", "cherry"]
for x in thislist:
  print(x)

———————

Loop Through the Index Numbers


thislist = ["apple", "banana", "cherry"]
for i in range(len(thislist)):
  print(thislist[i])


———————————


Using a While Loop

thislist = ["apple", "banana", "cherry"]
i = 0
while i < len(thislist):
  print(thislist[i])
  i = i + 1

A short hand for loop

thislist = ["apple", "banana", "cherry"]
[print(x) for x in thislist]



—————————————————

Sort list in python

Sort List Alphanumerically

thislist = ["orange", "mango", "kiwi", "pineapple", "banana"]
thislist.sort()
print(thislist)

Sort the list numerically:

thislist = [100, 50, 65, 82, 23]
thislist.sort()
print(thislist)

Sort Descending

thislist = ["orange", "mango", "kiwi", "pineapple", "banana"]
thislist.sort(reverse = True)
print(thislist)



Case sensitive sorting can give an unexpected result:

thislist = ["banana", "Orange", "Kiwi", "cherry"]
thislist.sort()
print(thislist)

we can use built-in functions as key functions when sorting a list.

thislist = ["banana", "Orange", "Kiwi", "cherry"]
thislist.sort(key = str.lower)
print(thislist)


Reverse Order

thislist = ["banana", "Orange", "Kiwi", "cherry"]
thislist.reverse()




———————————————

Copy a List


You cannot copy a list simply by typing list2 = list1, because: list2 will only be a reference to list1, and changes made in list1 will automatically also be made in list2.



numbers2 = numbers
print(numbers2)

numbers.pop()

print(numbers2)


Make a copy of a list with the copy() method:

thislist = ["apple", "banana", "cherry"]
mylist = thislist.copy()
print(mylist)


———————————————

Join List

One of the easiest ways are by using the + operator.

list1 = ["a", "b", "c"]
list2 = [1, 2, 3]

list3 = list1 + list2
print(list3)

Append list2 into list1:

list1 = ["a", "b" , "c"]
list2 = [1, 2, 3]

for x in list2:
  list1.append(x)

print(list1)



Or you can use the extend() method, which purpose is to add elements from one list to another list:

list1 = ["a", "b" , "c"]
list2 = [1, 2, 3]

list1.extend(list2)
print(list1)






















